<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>research</artifactId>
		<groupId>com.boscarine</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>remote</artifactId>

	<packaging>war</packaging>

	<name>Remote Find Dups client</name>
	<description>Connects to remote FindDups instance.</description>

	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Timestamp format for the maven.build.timestamp property -->
		<!-- You can reference property in pom.xml or filtered resources (must enable third-party plugin if using Maven < 2.1) -->
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
		<!-- Set the jboss.home property in an active profile of the $HOME/.m2/settings.xml to specify the JBoss AS directory the "Maven 
			way" -->
		<!-- By default, we assign it to the value of the JBOSS_HOME envrionment variable -->
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<jboss.domain>default</jboss.domain>
		<arquillian.version>1.0.0-SNAPSHOT</arquillian.version>
		<jboss-javaee6-spec.version>1.0.0.Beta5</jboss-javaee6-spec.version>
	</properties>


    <dependencies>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.1.5.1</version>
		</dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.12.1</version>
            <scope>test</scope>
        </dependency>

        <!-- This imports the Java EE 6 runtime libraries provided by GlassFish Embedded -->
        <dependency>
            <groupId>org.glassfish.extras</groupId>
            <artifactId>glassfish-embedded-all</artifactId>
            <version>3.0.1-b20</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Compiler plugin enforces Java 1.6 compatibility and controls execution of annotation processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
				<executions>
					<execution>
						<id>run-annotation-processors-only</id>
						<phase>generate-sources</phase>
						<configuration>
							<compilerArgument>-proc:only</compilerArgument>
							<!-- If your app has multiple packages, use this include filter to execute the processor only on the package containing your 
								entities -->
							<!-- <includes> <include>**/model/*.java</include> </includes> -->
						</configuration>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Build helper plugin adds the sources generated by the JPA 2 annotation processor to the compile path -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/annotations</source>
							</sources>
						</configuration>
						<goals>
							<goal>add-source</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Configure the Embedded GlassFish Maven plugin -->
			<plugin>
				<groupId>org.glassfish</groupId>
				<artifactId>maven-embedded-glassfish-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<app>${project.build.directory}/${build.finalName}.war</app>
					<port>9080</port>
					<containerType>web</containerType>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
