<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>research</artifactId>
		<groupId>com.boscarine</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>finddup</artifactId>
	<packaging>war</packaging>
	<properties>
		<!-- Explicitly declaring the source encoding eliminates the following message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Timestamp format for the maven.build.timestamp property -->
		<!-- You can reference property in pom.xml or filtered resources (must enable third-party plugin if using Maven < 2.1) -->
		<maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
		<arquillian.version>1.0.0.Alpha3</arquillian.version>
		<jboss-javaee6-spec.version>1.0.0.Beta7</jboss-javaee6-spec.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>com.sleepycat</groupId>
			<artifactId>je</artifactId>
			<version>4.0.103</version>
		</dependency>
		<!-- Weld Extensions provides convenient, portable CDI extensions such as an injectable logger -->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-extensions</artifactId>
			<version>1.0.0.Alpha2</version>
		</dependency>

		<!-- Need to use the injectable logger in Weld Extensions -->
		<!-- Switch scope to provided if server provides slf4j; JBoss AS provides it; GlassFish provides it if you have the Hibernate JPA 
			provider installed -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<!-- is this needed? -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.6.1</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<scope>test</scope>
		</dependency>

		<!-- Remove if server provides slf4j; JBoss AS provides it; GlassFish provides it if you have the Hibernate JPA provider installed -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-jdk14</artifactId>
			<version>1.6.1</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<!-- <version>5.12.1</version> -->
			<version>5.10</version>
			<classifier>jdk15</classifier>
			<scope>test</scope>
		</dependency>

		<!-- This imports the Java EE 6 runtime libraries provided by GlassFish Embedded -->
		<dependency>
			<groupId>org.glassfish.extras</groupId>
			<artifactId>glassfish-embedded-all</artifactId>
			<version>3.0.1-b20</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-se</artifactId>
			<version>1.0.1-Final</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.arquillian</groupId>
			<artifactId>arquillian-testng</artifactId>
			<version>1.0.0.Alpha1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.arquillian.container</groupId>
			<artifactId>arquillian-weld-embedded</artifactId>
			<version>1.0.0.Alpha1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Configure the Embedded GlassFish Maven plugin -->
			<plugin>
				<groupId>org.glassfish</groupId>
				<artifactId>maven-embedded-glassfish-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<app>${project.build.directory}/${build.finalName}.war</app>
					<port>8090</port>
					<containerType>web</containerType>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatibility and controls execution of annotation processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<!-- don't use version 2.5 as it creates seperate test suites per class -->
				<version>2.4.3</version>
				<configuration>
					<systemProperties>
						<!-- This optional property fixes an annoyance with Glassfish that puts derby.log in the project root -->
						<property>
							<name>derby.stream.error.file</name>
							<!-- If you save the log in target it is less likely to get committed in your project -->
							<value>target/derby.log</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
